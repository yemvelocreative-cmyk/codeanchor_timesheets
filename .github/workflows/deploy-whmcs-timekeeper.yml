name: Deploy WHMCS Timekeeper (DEV)

on:
  push:
    branches: [ main ]
    paths:
      - 'modules/addons/timekeeper/**'
      - '.github/workflows/deploy-whmcs-timekeeper.yml'
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    concurrency:
      group: deploy-whmcs-timekeeper-dev
      cancel-in-progress: true

    env:
      REPO_DIR: modules/addons/timekeeper
      REMOTE_DIR: ${{ secrets.TARGET_DIR }}/modules/addons/timekeeper
      PORT: "2222"

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Sanity: secrets and local folder present
      - name: Sanity check
        run: |
          set -e
          [ -n "${{ secrets.SSH_HOST }}" ] && echo "SSH_HOST ✅" || (echo "SSH_HOST ❌"; exit 1)
          [ -n "${{ secrets.SSH_USER }}" ] && echo "SSH_USER ✅" || (echo "SSH_USER ❌"; exit 1)
          [ -n "${{ secrets.SSH_PASSWORD }}" ] && echo "SSH_PASSWORD ✅" || (echo "SSH_PASSWORD ❌"; exit 1)
          [ -n "${{ secrets.TARGET_DIR }}" ] && echo "TARGET_DIR ✅" || (echo "TARGET_DIR ❌"; exit 1)
          test -d "$REPO_DIR" && echo "Found $REPO_DIR/ ✅" || (echo "Missing $REPO_DIR/ ❌"; exit 1)
          ls -la "$REPO_DIR" | sed -n '1,60p'

      # Local fingerprint (looks for timekeeper.php; warns if extension typo)
      - name: Local file fingerprint
        run: |
          set -e
          if [ -f "$REPO_DIR/timekeeper.php" ]; then
            echo "Local: $REPO_DIR/timekeeper.php"
            ls -la "$REPO_DIR/timekeeper.php"
            (command -v md5sum >/dev/null && md5sum "$REPO_DIR/timekeeper.php") || shasum "$REPO_DIR/timekeeper.php"
          elif [ -f "$REPO_DIR/timekeeper.ph" ]; then
            echo "⚠ Found $REPO_DIR/timekeeper.ph (did you mean .php?)"
            ls -la "$REPO_DIR/timekeeper.ph"
          else
            echo "Note: timekeeper.php not found; continuing (maybe other files changed)."
          fi

      # Remote BEFORE
      - name: Remote state BEFORE
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          password: ${{ secrets.SSH_PASSWORD }}
          port: ${{ env.PORT }}
          script: |
            set -e
            echo "REMOTE_DIR: $REMOTE_DIR"
            ls -la "$REMOTE_DIR" || echo "(remote dir missing)"
            if [ -f "$REMOTE_DIR/timekeeper.php" ]; then
              ls -la "$REMOTE_DIR/timekeeper.php"
              (command -v md5sum >/dev/null && md5sum "$REMOTE_DIR/timekeeper.php") || shasum "$REMOTE_DIR/timekeeper.php" || true
            else
              echo "(remote timekeeper.php missing)"
            fi

      # Ensure target directory exists
      - name: Ensure remote directory exists
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          password: ${{ secrets.SSH_PASSWORD }}
          port: ${{ env.PORT }}
          script: |
            mkdir -p "$REMOTE_DIR"

      # Remove the file to guarantee overwrite
      - name: Remove remote file (force fresh copy)
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          password: ${{ secrets.SSH_PASSWORD }}
          port: ${{ env.PORT }}
          script: |
            rm -f "$REMOTE_DIR/timekeeper.php" || true

      # Upload recursively from repo to server
      - name: Upload add-on via SFTP (recursive)
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          password: ${{ secrets.SSH_PASSWORD }}
          port: ${{ env.PORT }}
          source: "${{ env.REPO_DIR }}/**"
          target: "${{ env.REMOTE_DIR }}"
          overwrite: true
          debug: true

      # Remote AFTER
      - name: Remote state AFTER
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          password: ${{ secrets.SSH_PASSWORD }}
          port: ${{ env.PORT }}
          script: |
            set -e
            echo "REMOTE_DIR: $REMOTE_DIR"
            ls -la "$REMOTE_DIR/timekeeper.php" || echo "(remote file missing)"
            if [ -f "$REMOTE_DIR/timekeeper.php" ]; then
              (command -v md5sum >/dev/null && md5sum "$REMOTE_DIR/timekeeper.php") || shasum "$REMOTE_DIR/timekeeper.php" || true
            fi
