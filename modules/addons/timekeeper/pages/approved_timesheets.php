<?phpuse WHMCS\Database\Capsule;if (!defined("WHMCS")) {    die("Access Denied");}// Fetch role IDs allowed to approve/unapprove (adjust query/table as needed)$approverRoleIds = []; // array of integers$approvalSetting = Capsule::table('mod_timekeeper_permissions')    ->where('setting_key', 'approval_roles')    ->first();if ($approvalSetting) {    // Assuming CSV list of role IDs, e.g., "1,3,4"    $approverRoleIds = array_map('intval', explode(',', $approvalSetting->setting_value));}$currentAdminId = $_SESSION['adminid'];$admin = Capsule::table('tbladmins')->where('id', $currentAdminId)->first();$currentAdminRoleId = $admin->roleid;// --- APPROVED TIMESHEETS MODULE ---// Get current admin info$adminId = $_SESSION['adminid'];$admin = Capsule::table('tbladmins')->where('id', $adminId)->first();$adminRoleId = $admin->roleid;// Get allowed roles from permissions (for viewing ALL approved timesheets)$saved = Capsule::table('mod_timekeeper_permissions')    ->where('setting_key', 'permission_pending_timesheets_view_all')    ->value('setting_value');$allowedRoles = $saved ? explode(',', $saved) : [];// Get allowed approval roles (not used for approved, but loaded in case of future logic)$savedApproval = Capsule::table('mod_timekeeper_permissions')    ->where('setting_key', 'permission_pending_timesheets_approve')    ->value('setting_value');$allowedApprovalRoles = $savedApproval ? explode(',', $savedApproval) : [];if (!is_array($allowedApprovalRoles)) $allowedApprovalRoles = [];$canApprove = in_array($adminRoleId, $allowedApprovalRoles);// Validation for minumum time spent required (not actively used, just loaded for template)$unbilledTimeValidateMin = Capsule::table('mod_timekeeper_permissions')    ->where('setting_key', 'unbilled_time_validate_min')    ->value('setting_value');if ($unbilledTimeValidateMin !== null && $unbilledTimeValidateMin !== '') {    $unbilledTimeValidateMin = floatval($unbilledTimeValidateMin);} else {    $unbilledTimeValidateMin = null; // Not set}// --- Role-based filter for viewing approved timesheets ---$approvedTimesheetsQuery = Capsule::table('mod_timekeeper_timesheets')    ->where('status', 'approved')    ->where('timesheet_date', '<', date('Y-m-d')); // '<=' if you want to include today// If admin is not in allowedRoles, only show their own timesheetsif (!in_array($adminRoleId, $allowedRoles)) {    $approvedTimesheetsQuery->where('admin_id', $adminId);}$approvedTimesheets = $approvedTimesheetsQuery->orderBy('timesheet_date', 'desc')->get();// Fetch admin names$adminMap = Capsule::table('tbladmins')    ->pluck('firstname', 'id')    ->toArray();// Lookup maps$clients = Capsule::table('tblclients')->get();$clientMap = [];foreach ($clients as $c) {    $clientMap[$c->id] = $c->companyname ?: ($c->firstname . ' ' . $c->lastname);}$departments = Capsule::table('mod_timekeeper_departments')->get();$departmentMap = [];foreach ($departments as $d) {    $departmentMap[$d->id] = $d->name;}$taskCategories = Capsule::table('mod_timekeeper_task_categories')->get();$taskMap = [];foreach ($taskCategories as $t) {    $taskMap[$t->id] = $t->name;}// Edit mode variables$editMode = false;$editTimesheetEntries = [];$editAdminId = null;$editTimesheetDate = '';$editAdminName = '';$editingEntryId = isset($_GET['edit_id']) ? (int) $_GET['edit_id'] : null;$timesheet = null;// Handle loading a specific approved timesheetif (!empty($_GET['admin_id']) && !empty($_GET['date'])) {    $editMode = true;    $editAdminId = (int) $_GET['admin_id'];    $editTimesheetDate = $_GET['date'];    $editAdminName = $adminMap[$editAdminId] ?? 'Unknown';    $timesheet = Capsule::table('mod_timekeeper_timesheets')        ->where('admin_id', $editAdminId)        ->where('timesheet_date', $editTimesheetDate)        ->where('status', 'approved')        ->first();    if ($timesheet) {        $editTimesheetEntries = Capsule::table('mod_timekeeper_timesheet_entries')            ->where('timesheet_id', $timesheet->id)            ->get();    }}//Handle Unapproval of timesheetif ($_SERVER['REQUEST_METHOD'] === 'POST' && isset($_POST['unapprove_id'])) {    $id = (int)$_POST['unapprove_id'];    Capsule::table('mod_timekeeper_timesheets')->where('id', $id)->update(['status' => 'pending']);    // Optionally, add a redirect with a success message:    header('Location: addonmodules.php?module=timekeeper&timekeeperpage=approved_timesheets&unapproved=1');    exit;}$vars = compact(    'approvedTimesheets',    'adminMap',    'clientMap',    'departmentMap',    'taskMap',    'editMode',    'editTimesheetEntries',    'editAdminId',    'editTimesheetDate',    'editAdminName',    'editingEntryId',    'canApprove',    'timesheet',    'unbilledTimeValidateMin');extract($vars);include __DIR__ . '/../templates/admin/approved_timesheets.tpl';