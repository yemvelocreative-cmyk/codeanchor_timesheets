<?phpuse WHMCS\Database\Capsule;if (!defined("WHMCS")) {    die("Access Denied");}echo '<link rel="stylesheet" href="../modules/addons/timekeeper/css/settings_tab.css" />';// Define your settings tabs$settingsTabs = [    'cron'      => 'Daily Cron Setup',    'approval'  => 'Timesheet Settings',    'hide_tabs' => 'Hide Menu Tabs',];// Detect selected sub-tab (default to 'cron')$activeTab = isset($_GET['subtab']) && isset($settingsTabs[$_GET['subtab']]) ? $_GET['subtab'] : 'cron';// --- TAB MENU OUTPUT ---echo '<ul class="timekeeper-settings-tabs">';foreach ($settingsTabs as $tabKey => $tabLabel) {    $isActive = ($tabKey === $activeTab) ? 'active' : '';    echo "<li class=\"{$isActive}\">        <a href=\"addonmodules.php?module=timekeeper&timekeeperpage=settings&subtab={$tabKey}\">{$tabLabel}</a>    </li>";}echo '</ul>';// --- TAB-SPECIFIC LOGIC & INCLUDES ---switch ($activeTab) {    case 'cron':        // Load WHMCS admin roles        $roles = Capsule::table('tbladminroles')->orderBy('name')->get();        // Define days of the week        $daysOfWeek = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'];        // Handle form submit        if ($_SERVER['REQUEST_METHOD'] === 'POST') {            // Save Cron Days            $cronDays = isset($_POST['cron_days']) && is_array($_POST['cron_days']) ? $_POST['cron_days'] : [];            $cronDaysSanitized = array_map('htmlspecialchars', $cronDays);            // Update each day of the week            foreach ($daysOfWeek as $day) {                $key = 'cron_' . $day;                $status = in_array($day, $cronDaysSanitized) ? 'active' : 'inactive';                Capsule::table('mod_timekeeper_permissions')->updateOrInsert(                    ['setting_key' => $key],                    ['role_id' => 0, 'setting_value' => $status]                );            }            // Save Assigned Users (new method using mod_timekeeper_assigned_users)            if (array_key_exists('cron_users', $_POST)) {                $postedUsers = is_array($_POST['cron_users']) ? array_map('intval', $_POST['cron_users']) : [];                // Wipe previous assignments                $currentAssigned = Capsule::table('mod_timekeeper_assigned_users')->pluck('admin_id')->toArray();                $toAdd = array_diff($postedUsers, $currentAssigned);                $toRemove = array_diff($currentAssigned, $postedUsers);                // Insert only new users                foreach ($toAdd as $adminId) {                    Capsule::table('mod_timekeeper_assigned_users')->insert([                        'admin_id' => $adminId                    ]);                }                // Remove deselected users                if (!empty($toRemove)) {                    Capsule::table('mod_timekeeper_assigned_users')->whereIn('admin_id', $toRemove)->delete();                }            }            header("Location: addonmodules.php?module=timekeeper&timekeeperpage=settings&subtab=cron&success=1");            exit;        }        // Load current day statuses        $currentCronRows = Capsule::table('mod_timekeeper_permissions')            ->whereIn('setting_key', array_map(function ($d) {                return 'cron_' . $d;            }, $daysOfWeek))            ->get();        $currentCronDays = [];        foreach ($currentCronRows as $row) {            $currentCronDays[$row->setting_key] = $row->setting_value;        }        // Load all active admins        $allAdmins = Capsule::table('tbladmins')            ->where('disabled', 0)            ->orderBy('firstname')            ->get();        // Load assigned users from new table        $cronUsers = Capsule::table('mod_timekeeper_assigned_users')->pluck('admin_id')->toArray();        // Success flag        $success = isset($_GET['success']) && $_GET['success'] == 1;        // Include template        include __DIR__ . '/../templates/admin/components/settings_cron.tpl';        break;    case 'approval':        // Load all admin roles        $roles = Capsule::table('tbladminroles')->orderBy('name')->get();        // --- Handle form submits ---        if ($_SERVER['REQUEST_METHOD'] === 'POST') {            // Save "View" permissions            if (isset($_POST['pending_timesheets_roles'])) {                $selectedRoles = array_map('intval', $_POST['pending_timesheets_roles']);                $roleList = implode(',', $selectedRoles);                Capsule::table('mod_timekeeper_permissions')->updateOrInsert(                    ['setting_key' => 'permission_pending_timesheets_view_all'],                    ['role_id' => 0, 'setting_value' => $roleList]                );                header("Location: addonmodules.php?module=timekeeper&timekeeperpage=settings&subtab=approval&success=1");                exit;            }            // Save "Approve" permissions and Validate Time Spent            if (isset($_POST['pending_timesheets_approval_roles']) || isset($_POST['unbilled_time_validate_min'])) {                $selectedApprovalRoles = isset($_POST['pending_timesheets_approval_roles'])                    ? array_map('intval', $_POST['pending_timesheets_approval_roles'])                    : [];                $approvalRoleList = implode(',', $selectedApprovalRoles);                Capsule::table('mod_timekeeper_permissions')->updateOrInsert(                    ['setting_key' => 'permission_pending_timesheets_approve'],                    ['role_id' => 0, 'setting_value' => $approvalRoleList]                );                // Save minimum unbilled time validate setting                if (isset($_POST['unbilled_time_validate_min'])) {                    $minTime = is_numeric($_POST['unbilled_time_validate_min'])                        ? floatval($_POST['unbilled_time_validate_min'])                        : null;                    Capsule::table('mod_timekeeper_permissions')->updateOrInsert(                        ['setting_key' => 'unbilled_time_validate_min'],                        ['role_id' => 0, 'setting_value' => $minTime]                    );                }                header("Location: addonmodules.php?module=timekeeper&timekeeperpage=settings&subtab=approval&approval_success=1");                exit;            }        }        // Fetch saved "view" roles from DB        $saved = Capsule::table('mod_timekeeper_permissions')            ->where('setting_key', 'permission_pending_timesheets_view_all')            ->value('setting_value');        $allowedRoles = $saved ? explode(',', $saved) : [];        if (!is_array($allowedRoles)) $allowedRoles = [];        // Fetch saved "approve" roles from DB        $savedApproval = Capsule::table('mod_timekeeper_permissions')            ->where('setting_key', 'permission_pending_timesheets_approve')            ->value('setting_value');        $allowedApprovalRoles = $savedApproval ? explode(',', $savedApproval) : [];        if (!is_array($allowedApprovalRoles)) $allowedApprovalRoles = [];        // Fetch Validate Time Spent value        $unbilledTimeValidateMin = Capsule::table('mod_timekeeper_permissions')            ->where('setting_key', 'unbilled_time_validate_min')            ->value('setting_value');        // Include template        include __DIR__ . '/../templates/admin/components/settings_approval.tpl';        break;    case 'hide_tabs':        echo '<link rel="stylesheet" href="../modules/addons/timekeeper/css/settings_hide_tabs.css" />';        // (Future logic for Hide Menu Tabs tab goes here)        // Handle form submit for Hide Menu Tabs        if ($_SERVER['REQUEST_METHOD'] === 'POST' && isset($_POST['hidemenutabs_save'])) {            $hideTabs = $_POST['hide_tabs'] ?? [];            Capsule::table('mod_timekeeper_hidden_tabs')->truncate();            foreach ($hideTabs as $roleId => $tabs) {                foreach ($tabs as $tabName) {                    Capsule::table('mod_timekeeper_hidden_tabs')->insert([                        'role_id' => (int)$roleId,                        'tab_name' => $tabName                    ]);                }            }            header("Location: addonmodules.php?module=timekeeper&timekeeperpage=settings&subtab=hide_tabs&tab_visibility=1");            exit;        }                // Load Hide Menu Tabs UI        include __DIR__ . '/../templates/admin/components/settings_hide_tabs.tpl';        break;    default:        // Default to cron        include __DIR__ . '/../templates/admin/components/settings_cron.tpl';        break;}